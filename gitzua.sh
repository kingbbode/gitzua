#!/bin/bash

find_current_user() {
  local user="$(git remote -v | head -1 | awk '{print $2}' | tr -s ':' | cut -d ':' -f 1 | tr -s '@' | cut -d '@' -f 2)"
  
  if [[ "$user" = "github.com" ]]; then
    echo "!info: current globar user"
  fi
  echo "$user"
}

print_user_list() {
  local hosts=$(cat ~/.ssh/config| grep 'Host ' | awk '{print $2}')

  for host in $hosts; do 
    if [[ "$(ssh -G $host | grep user | awk '{print $2}' | head -n 1)" = "git" ]]; then
      printf "$host"
      
      if [[ "$host" = "$CURRENT_USER" ]]; then
        printf "[*]\n"
      else
        printf "[ ]\n"
      fi;
    fi; 	
  done

  echo "${HOSTS}"
}

create_info() {
  while : ; do
    printf "email > " 
    read email

    if [[ -z "$email" ]]; then
      printf '%s\n' "email is required!"
      continue
    else
      break;
    fi
  done
  
  while : ; do
    printf "name > "
    read name

    if [[ -z "$name" ]]; then
      printf '%s\n' "name is required!"
      continue
    else
      break;
    fi
  done

  echo "\nCreate Public Key...\n"
  ssh-keygen -t rsa -C "$email" -f ~/.ssh/id_rsa_gitzua_$name
  write_ssh_config $email $name
}

required_input(){
  while : ; do
    printf "aaaaaaaaaaaa : "
    read value

    if [[ -z "$value" ]]; then
      printf '%s\n' "$0 is required!"
      continue
    else
      break;
    fi
  done
  
  echo "$value"
}

write_ssh_config() {
  local email="$1"
  local name="$2"
  identityFile=~"/.ssh/id_rsa_gitzua_$name"

  cat >> ~/.ssh/config <<EOF

###########################
##Generated By GITZUAAA~!##
###########################
#name:$name,email:$email
Host $name
  HostName github.com
  User git
  IdentityFile $identityFile
EOF
}

change_user() {
  local changeUser="$1"
  local currentRepository=$(git remote -v | head -1 | awk '{print $2}' | tr -s ':' | cut -d ':' -f 2)
  git remote set-url origin git@$changeUser:$currentRepository
  CURRENT_USER=$(find_current_user)
}

################################
############ GITZUA ############
################################

which git &> /dev/null
if [ "$?" != "0" ]; then
    echo "git is not installed..."
    exit 1
fi

CURRENT_USER=$(find_current_user)

if [[ -z "$CURRENT_USER" ]]; then
    exit 1;
fi

print_user_list
change_user $1
print_user_list
#create_info
